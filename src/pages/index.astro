---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import Card from "../components/Card.astro";
import { Image } from "@astrojs/image/components";
import { motion } from "framer-motion"

const posts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const last_posts = posts.slice(0, 3);
const uniqueTags = [...new Set(posts.map((post) => post.data.tags).flat())];
---

<div class="bg-[url('/background_home.svg')] bg-cover">

<BaseLayout isIndex="true" expandFooter="" sideBarActiveItemID="home" title="home" >
  <!-- <div class="absolute bottom-0 w-screen h-screen  bg-teal-800 z-50">  
  </div> -->
  <div class="px-5 pb-9  bg-white">
    <div class="flex justify-between items-center pt-8"> 
      <div>
      </div>
      <div class="flex justify-end ">
        <a href="/about" class="btn btn-outline border-base-300 ml-5">
          About
        </a>

        <a href="/chat"  class="btn btn-outline border-base-300 mx-5">
        <!-- Profile Image -->
        <Image class="mask mask-circle" aspectRatio="1:1" format="webp" width={30} height={30} src="/profile.svg" alt="Profile image" />
        <span class="text-sm"> online </span>
        <span class="relative">
          <span class="absolute animate-pulse  w-1.5 h-1.5 bg-green-500 rounded-full" style="top: 50%; transform: translate(-50%, -50%);"></span>
        </span>
        <span class="text-sm"> | chat </span>
      </a>


        <a class="btn bg-blue-950 text-white relative z-10" href="https://twitter.com" target="_blank"> Resume
      </a>

      </div>

      </div>
    </div>
  <div class="  bg-gradient-to-r from-[#e0d8bf44]/30 to-slate-900/0 ">
      <div>
        <div class="h-40 pt-5 px-4 text-lg w-full font-normal mb-2 text-center text-stone-500">filter by service
        
          <div class="mt-4">
            {uniqueTags.map((tag) => (
              <a href="#" data-tag={tag} class="btn btn-outline border-stone-300 ml-5 tag-button">
                {tag}
              </a>
            ))}
            <a href="#" class="btn btn-outline border-stone-300 ml-5 tag-button" data-tag="all">Show All</a>
          </div>
        </div>
      </div>
      
        {
          last_posts.map((post) => (
            <>
            <div class="post relative group transition-opacity duration-300" data-tags={post.data.tags.join(',')}>
              
              <HorizontalCard
                title={post.data.title}
                img={post.data.heroImage}
                desc={post.data.description}
                url={"/blog/" + post.slug}
                target="_self"
                badge={post.data.badge}
                tags={post.data.tags}
              />
           
              {/* Overlay */}
              <div class="absolute top-0 left-0 w-full h-full bg-black bg-opacity-60 flex justify-center items-center opacity-0 group-hover:opacity-100">
                {post.data.tags.map(tag => (
                  <span class="m-1 px-2 py-1 bg-white rounded-md">{tag}</span>
                ))}
              </div>
              
            <div class="divider my-0" />
           </div>
            </>
          ))

        }
  </div>
</BaseLayout>
<script>
document.addEventListener("DOMContentLoaded", function() {
  // Grab all the tag buttons and posts
  const tagButtons = document.querySelectorAll('.tag-button');
  const posts = document.querySelectorAll('.post');

  tagButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();

      // Get the tag from the clicked button
      const tag = e.target.getAttribute('data-tag');

      // Filter posts based on the tag
      posts.forEach(post => {
        if (tag === 'all' || post.getAttribute('data-tags').includes(tag)) {
          post.classList.remove('hidden'); // show post
        } else {
          post.classList.add('hidden'); // hide post
        }
      });
    });
  });
});
</script>

</div>
