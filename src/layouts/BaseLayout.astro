---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import SideBar from "../components/SideBar.astro";
// import { motion } from "framer-motion"
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import { Image } from "@astrojs/image/components";
import SideBarFooter from "../components/SideBarFooter.astro";
// import { motion } from "framer-motion";
const { image, title = SITE_TITLE, description = SITE_DESCRIPTION, isIndex = false ,includeSidebar = true, expandFooter=true, sideBarActiveItemID, changeColour=false } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" data-theme="lofi">
  <head>
    <BaseHead title={title} description={description} image={image} />
  </head>
  <body>
    
    <div class=" relative drawer lg:drawer-open">
      {isIndex && <div id="animatedDiv" class="flex justify-center align-middle absolute overflow-hidden h-screen bg-teal-800 w-full z-30 opacity-100">
    
        <div id="childDiv" class="justify-center align-middle self-center flex container columns-2 space-x-5 "
        >

        <div  class="w-auto h-auto "
        
        >
            <Image class="mask mask-circle " aspectRatio="1:1" format="webp" width={150} height={150} src="/profile.svg" alt="Profile image" />
        </div>

        <div id="childDiv" class="block  align-middle self-center text-center  w-auto h-auto"

        >
          <p class="font-normal text-white text-3xl ">Ahmed <span class="font-bold ">Kamal Eldin</span> </p>
          <p class="font-extralight text-white text-base font-sans">Digital Products Desiger and Developer</p>  
        </div>

        </div>
        <div class="absolute bottom-0  w-full">
          <SideBarFooter expandFooter="true" changeColour={changeColour}/>
        </div>
      </div>}
      
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div id="feed" class="drawer-content backdrop-blur-md h-screen overflow-hidden bg-slate-400/10" >
        <Header title={SITE_TITLE} /> 
        <div class="w-full ">
          <main class=" ">
            <slot />
          </main>
        </div>
        <!-- {expandFooter? "":<SideBarFooter />} -->
      </div>
      {includeSidebar && <SideBar expandFooter={expandFooter} changeColour={changeColour} sideBarActiveItemID={sideBarActiveItemID} title={title} />}
    </div>


    <script define:vars={{isIndex}}>
      
    window.onload = function() {
  if ( isIndex == "true") {
        setTimeout(function() {
            var parentElement = document.getElementById("animatedDiv");
            parentElement.classList.remove("w-full");
            parentElement.classList.add("w-[35vw]", "transition-all", "duration-[1200ms]");
        }, 2000); // The delay time for parent element in ms

        setTimeout(function() {
            var parentElement = document.getElementById("animatedDiv");
          parentElement.classList.add("opacity-5", "duration-[1200ms]");
        }, 2900); // The delay time for parent element in ms
    
    setTimeout(function() {
            var childDiv = document.getElementById("childDiv");
            childDiv.classList.add("opacity-20", "duration-[1000ms]");
        }, 2000); // The delay time for parent element in ms

     setTimeout(function() {
            var childDiv = document.getElementById("childDiv");
            childDiv.classList.add("-translate-y-[40vh]", "-translate-x-[6vw]", "transition-all","scale-50", "duration-[1000ms]");
        }, 2000); // The delay time for parent element in ms

      setTimeout(function() {
            var parentElement = document.getElementById("animatedDiv");
            parentElement.classList.add("hidden");
        }, 5000); // The delay time for parent element in ms

        setTimeout(function() {
            var feedElement = document.getElementById("feed");
            feedElement.classList.remove("overflow-hidden","h-screen");
        }, 5000); // The delay time for parent element in ms
      }
      else {
        setTimeout(function() {
            var feedElement = document.getElementById("feed");
            feedElement.classList.remove("overflow-hidden","h-screen");
        }, 0); // The delay time for parent element in ms
  }
    };


    </script>
  </body>
</html>
